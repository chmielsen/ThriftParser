package thriftParser.Absyn; // Java Package generated by the BNF Converter.

public class FDecl extends Field {
  public final Integer integer_;
  public final Requirement requirement_;
  public final Type type_;
  public final String ident_;
  public final Default default_;

  public FDecl(Integer p1, Requirement p2, Type p3, String p4, Default p5) { integer_ = p1; requirement_ = p2; type_ = p3; ident_ = p4; default_ = p5; }

  public <R,A> R accept(thriftParser.Absyn.Field.Visitor<R,A> v, A arg) { return v.visit(this, arg); }

  public boolean equals(Object o) {
    if (this == o) return true;
    if (o instanceof thriftParser.Absyn.FDecl) {
      thriftParser.Absyn.FDecl x = (thriftParser.Absyn.FDecl)o;
      return this.integer_.equals(x.integer_) && this.requirement_.equals(x.requirement_) && this.type_.equals(x.type_) && this.ident_.equals(x.ident_) && this.default_.equals(x.default_);
    }
    return false;
  }

  public int hashCode() {
    return 37*(37*(37*(37*(this.integer_.hashCode())+this.requirement_.hashCode())+this.type_.hashCode())+this.ident_.hashCode())+this.default_.hashCode();
  }


}
